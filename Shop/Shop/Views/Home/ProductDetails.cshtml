@model Shop.ViewModels.HomeViewModel

@{
    ViewData["Title"] = "Product Details";
}





    <div class="card">

        <br />

        <h1 class="text-center">@Html.DisplayFor(model => model.Brand) @Html.DisplayFor(model => model.ModelName)</h1>

        <hr />

        <br />
        <div id="loadingDiv">
            <div class="row" style="justify-content: center">
                <img src="~/Images/loading-gif.gif" width="100" id="loadingGif" />
            </div>
        </div>

        <div class="text-center" id="imagesDiv">
            @{
                if (Model.Images.Count > 0)
                {
                    foreach (var img in Model.Images)
                    {
                        var base64 = Convert.ToBase64String(img.Photo);
                        var finalStr = string.Format("data:image/jpg;base64,{0}", base64);
                        <img src="@finalStr" width="350" class="magniflier" />
                    }
                }
                else
                {
                    <img src="~/Images/no_image.png" width="350" />
                }
            }
        </div>

        <br />

        <div>
            <dl class="row">
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Category)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Category)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ProductType)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ProductType)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Brand)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Brand)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.ModelName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.ModelName)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Description)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Price)
                </dt>
                <dd class="col-sm-10">
                    $ @Html.DisplayFor(model => model.Price)
                </dd>

            </dl>
        </div>

    <div class="text-center">
        <form asp-action="AddToShoppingCart"
              asp-controller="ShoppingCart"
              asp-route-id="@Model.ProductId"
              method="post">

            <button class="btn btn-primary" style="width:200px;"><i class="fa fa-shopping-cart" aria-hidden="true"></i> Add to Cart</button>
        </form>
        <br />
    </div>

    </div>

<div class="text-center"> 
    <a asp-controller="Home" asp-action="Index"><i class="fa fa-arrow-left" aria-hidden="true"></i> Back</a>
</div>







<script src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript">


    $(document).ready(function () {

        $("#imagesDiv").hide();


        setTimeout(function () {
            $("#loadingDiv").hide();
            $("#imagesDiv").show();
        }, 750);


    })

    //Magnifier
    $(function () {

        var native_width = 0;
        var native_height = 0;
        var mouse = { x: 0, y: 0 };
        var magnify;
        var cur_img;

        var ui = {
            magniflier: $('.magniflier')
        };

        // Add the magnifying glass
        if (ui.magniflier.length) {
            var div = document.createElement('div');
            div.setAttribute('class', 'glass');
            ui.glass = $(div);

            $('body').append(div);
        }

        var mouseMove = function (e) {
            var $el = $(this);

            var magnify_offset = cur_img.offset();

            mouse.x = e.pageX - magnify_offset.left;
            mouse.y = e.pageY - magnify_offset.top;

            if (
                mouse.x < cur_img.width() &&
                mouse.y < cur_img.height() &&
                mouse.x > 0 &&
                mouse.y > 0
            ) {

                magnify(e);
            }
            else {
                ui.glass.fadeOut(100);
            }

            return;
        };

        var magnify = function (e) {

            var rx = Math.round(mouse.x / cur_img.width() * native_width - ui.glass.width() / 2) * -1;
            var ry = Math.round(mouse.y / cur_img.height() * native_height - ui.glass.height() / 2) * -1;
            var bg_pos = rx + "px " + ry + "px";


            var glass_left = e.pageX - ui.glass.width() / 2;
            var glass_top = e.pageY - ui.glass.height() / 2;

            ui.glass.css({
                left: glass_left,
                top: glass_top,
                backgroundPosition: bg_pos
            });

            return;
        };

        $('.magniflier').on('mousemove', function () {
            ui.glass.fadeIn(200);

            cur_img = $(this);

            var large_img_loaded = cur_img.data('large-img-loaded');
            var src = cur_img.data('large') || cur_img.attr('src');

            if (src) {
                ui.glass.css({
                    'background-image': 'url(' + src + ')',
                    'background-repeat': 'no-repeat'
                });
            }

            if (!cur_img.data('native_width')) {
                var image_object = new Image();

                image_object.onload = function () {
                    native_width = image_object.width;
                    native_height = image_object.height;

                    cur_img.data('native_width', native_width);
                    cur_img.data('native_height', native_height);

                    mouseMove.apply(this, arguments);

                    ui.glass.on('mousemove', mouseMove);
                };


                image_object.src = src;

                return;
            } else {

                native_width = cur_img.data('native_width');
                native_height = cur_img.data('native_height');
            }

            mouseMove.apply(this, arguments);

            ui.glass.on('mousemove', mouseMove);
        });

        ui.glass.on('mouseout', function () {
            ui.glass.off('mousemove', mouseMove);
        });

    });

</script>
@model IEnumerable<Shop.ViewModels.OrderViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "All Orders";
}

    <div class="row">

        <div class="col-12 card">

            <br />

            <h1 class="text-center"><i class="fa fa-lock" aria-hidden="true"></i> All Orders</h1>

            <hr />

            <div>
                <h5 class="float-left text-dark orderInfo"><i class="fas fa-info-circle"></i> Orders today: @ViewBag.TodaysOrdersCount</h5>

                <h5 class="float-right text-dark orderInfo"><i class="fas fa-info-circle"></i> Total orders: @ViewBag.TotalOrdersCount</h5>
            </div>


            <table class="table table-striped table-responsive-lg table-responsive-md table-responsive-sm">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderPlacedTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Address)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PhoneNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderItems)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderTotal)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                Date : @item.OrderPlacedTime.ToString("dd MMMM yyyy")
                                <br />
                                Time : @item.OrderPlacedTime.ToString("hh:mm tt")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                                <br />
                                @Html.DisplayFor(modelItem => item.ZipCode)
                                @Html.DisplayFor(modelItem => item.City)
                                <br />
                                @Html.DisplayFor(modelItem => item.Country)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                @if (item.OrderItems.Count() > 0)
                                {
                                    @foreach (var orderItem in item.OrderItems)
                                    {
                                        <div>
                                            <p>
                                                <i>@orderItem.Product.Brand @orderItem.Product.ModelName</i>
                                                <br />
                                                <i>@orderItem.Quantity x @orderItem.Product.Price $</i>
                                            </p>
                                        </div>
                                    }
                                }
                            </td>
                            <td>
                                <b>@Html.DisplayFor(modelItem => item.OrderTotal) $</b>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

<br />

@*Pagination*@
<div class="row" style="justify-content:center">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("GetAllOrders", new { page = page }),
        new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
            {
                DisplayItemSliceAndTotal = false,
                ContainerDivClasses = new[] { "navigation" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
            })
</div>
@*Pagination*@
@model IEnumerable<Shop.ViewModels.OrderViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "My Orders";
}


<div class="row">

    <div class="col-12 card">


        <div class="text-center" id="loadingDiv">
            <br /><br /><br /><br /><br /><br /><br />
            <div class="row" style="justify-content: center">
                <img src="~/Images/loading-gif.gif" width="100" id="loadingGif" />
            </div>
            <br /><br /><br /><br /><br /><br /><br />
        </div>



        <div class="orderDiv">
            <br />

            <h1 class="text-center"><i class="fa fa-truck" aria-hidden="true"></i> My Orders</h1>
            <hr />
            @if (Model.Count() == 0)
            {
                <br />

                <h2 class="text-center" style="padding-top:100px;padding-bottom:200px;">Oops! Your Orders list is empty!</h2>

                <br />

            }
            else
            {
            <div>
                <a asp-controller="Home" asp-action="Index" class="btn btn-primary" style="width:200px;">Add New Order</a>
                <h4 class="float-right orderInfo">Total orders : @ViewBag.OrdersCount</h4>
            </div>

            <br />

            <table class="table table-striped table-responsive-xl table-responsive-lg table-responsive-md table-responsive-sm">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderPlacedTime)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.FullName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Address)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.PhoneNumber)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderItems)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.OrderTotal)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        
                        <tr>
                            <td>
                                Date : @item.OrderPlacedTime.ToString("dd MMMM yyyy")
                                <br />
                                Time : @item.OrderPlacedTime.ToString("hh:mm tt")
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.FullName)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Address)
                                @Html.DisplayFor(modelItem => item.ZipCode)
                                <br />
                                @Html.DisplayFor(modelItem => item.City)
                                <br />
                                @Html.DisplayFor(modelItem => item.Country)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.PhoneNumber)
                            </td>
                            <td>
                                @if (item.OrderItems.Count() > 0)
                                {
                                    @foreach (var orderItem in item.OrderItems)
                                    {
                                        <div>
                                            <p>
                                                <i>@orderItem.Product.Brand @orderItem.Product.ModelName</i>
                                                <br />
                                                <i>@orderItem.Quantity x @orderItem.Product.Price $</i>
                                            </p>
                                        </div>
                                    }
                                }
                            </td>
                            <td>
                                <b>@Html.DisplayFor(modelItem => item.OrderTotal) $</b>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            }
            <br />
        </div>

    </div>
</div>


<br />

@*Pagination*@
<div class="row" style="justify-content:center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("MyOrders", new { page = page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
        {
            DisplayItemSliceAndTotal = false,
            ContainerDivClasses = new[] { "navigation" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
        })
</div>
@*Pagination*@

<br />

<div class="text-center">
    <a asp-controller="Home" asp-action="Index"><i class="fa fa-arrow-left" aria-hidden="true"></i> Back</a>
</div>



<script src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $(".orderDiv").hide();

        setTimeout(function () {
            $("#loadingDiv").hide();
            $(".orderDiv").show();
        }, 750);


    })</script>
@model IEnumerable<Shop.ViewModels.OrderViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "My Orders";
}


<div class="row">

    <div class="col-12 card" style="padding:0px;margin-top:15px;overflow:hidden;">


        <div class="text-center" id="loadingDiv">
            <br /><br /><br /><br /><br /><br /><br />
            <div class="row" style="justify-content: center">
                <img src="~/Images/loading-gif.gif" width="100" id="loadingGif" />
            </div>
            <br /><br /><br /><br /><br /><br /><br />
        </div>


        <div class="orderDiv">

            <div class="card-header bg-warning box-shadow">
                <h1 class="text-center"><i class="fa fa-truck" aria-hidden="true"></i> My Orders</h1>
            </div>

            <br />

                @if (Model.Count() == 0)
                {
                    <br />

                    <h2 class="text-center" style="padding-top:100px;padding-bottom:200px;">Oops! Your Orders list is empty!</h2>

                    <br />

                }
                else
                {
                    <div>
                        <a asp-controller="Home" asp-action="Index" class="btn btn-primary" style="width:200px;margin-left:20px;"><i class="fas fa-plus-square"></i> Add New Order</a>
                        <h5 class="float-right orderInfo" style="margin-right:25px;"><i class="fas fa-info-circle"></i> Total orders : @ViewBag.OrdersCount</h5>
                    </div>

                    <br />

                    <table class="table table-striped table-responsive-lg table-responsive-md table-responsive-sm">
                        <thead>
                            <tr>
                                <th>
                                    Order date
                                </th>
                                <th>
                                    Delivery info
                                </th>
                                <th>
                                    Ordered items
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model)
                            {

                                <tr>
                                    <td>
                                        <b>Date: </b> @item.OrderPlacedTime.ToString("dd MMMM yyyy")
                                        <br />
                                        <b>Time: </b> @item.OrderPlacedTime.ToString("hh:mm tt")
                                    </td>
                                    <td>
                                        <b>Customer: </b> @Html.DisplayFor(modelItem => item.FullName)
                                        <br />
                                        <b>Phone:</b> @Html.DisplayFor(modelItem => item.PhoneNumber)
                                        <br />
                                        <b>Delivery address:</b>
                                        @Html.DisplayFor(modelItem => item.Address)
                                        @Html.DisplayFor(modelItem => item.ZipCode)
                                        @Html.DisplayFor(modelItem => item.City)
                                        @Html.DisplayFor(modelItem => item.Country)
                                    </td>
                                    <td>
                                        @if (item.OrderItems.Count() > 0)
                                        {
                                            @foreach (var orderItem in item.OrderItems)
                                            {
                                                <div>
                                                    <p>
                                                        @orderItem.Product.Brand @orderItem.Product.ModelName
                                                        <br />
                                                        @orderItem.Quantity x @orderItem.Product.Price $
                                                    </p>
                                                </div>
                                            }
                                        }
                                        <b>Total: @Html.DisplayFor(modelItem => item.OrderTotal) $</b>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                <br />
            </div>

    </div>
</div>


<br />

@*Pagination*@
<div class="row" style="justify-content:center">
    @Html.PagedListPager((IPagedList)Model, page => Url.Action("MyOrders", new { page = page }),
    new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
        {
            DisplayItemSliceAndTotal = false,
            ContainerDivClasses = new[] { "navigation" },
            LiElementClasses = new[] { "page-item" },
            PageClasses = new[] { "page-link" },
        })
</div>
@*Pagination*@

<br />

<div class="text-center">
    <a asp-controller="Home" asp-action="Index"><i class="fa fa-arrow-left" aria-hidden="true"></i> Back</a>
</div>



<script src="~/lib/jquery/dist/jquery.js"></script>
<script type="text/javascript">
    $(document).ready(function () {

        $(".orderDiv").hide();

        setTimeout(function () {
            $("#loadingDiv").hide();
            $(".orderDiv").show();
        }, 750);


    })</script>
@model IEnumerable<Shop.ViewModels.ProductViewModel>
@using X.PagedList.Mvc.Core;
@using X.PagedList;

@{
    ViewData["Title"] = "AllProducts";
}

    <div class="row">
        <div class="col-12 card" style="padding:0px;margin-top:15px;overflow:hidden;">

            <div class="card-header box-shadow bg-warning">
                <h1 class="text-center"><i class="fa fa-lock" aria-hidden="true"></i> All Products</h1>
            </div>

            <br />

            <div>
                <a asp-controller="Products" asp-action="AddProduct" class="btn btn-primary" style="width:200px;margin-left:20px;"><i class="fas fa-plus-square"></i>  Add New Product</a>
                <h5 class="float-right" style="margin-right:20px;"><i class="fas fa-info-circle"></i> Total products : @ViewBag.ProductsCount</h5>
            </div>

            <br />

            <table class="table table-striped table-responsive-lg table-responsive-md table-responsive-sm">
                <thead>
                    <tr>
                        <th></th>
                        <th>
                            @Html.DisplayNameFor(model => model.Category)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ProductType)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Brand)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ModelName)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Price)
                        </th>
                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null)
                    {
                        @foreach (var item in Model)
                        {
                            <tr>
                                @Html.HiddenFor(modelItem => item.ProductId)
                                <td>
                                    @{
                                        @if (item.Images.Count > 0)
                                        {
                                            foreach (var img in item.Images)
                                            {

                                                var base64 = Convert.ToBase64String(img.Photo);
                                                var finalStr = string.Format("data:image/jpg;base64,{0}", base64);
                                                <a href="~/Products/ProductImageDetails/@img.ImageId"><img src="@finalStr" width="75" height="75" /></a>

                                            }
                                        }
                                        else
                                        {
                                            <img src="~/Images/no_image.png" width="75" height="75" />
                                        }
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Category)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ProductType)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Brand)
                                </td>
                                <td class="text-center">
                                    <a asp-controller="Products" asp-action="ProductDetails" asp-route-id="@item.ProductId">@Html.DisplayFor(modelItem => item.ModelName)</a>
                                    <br />
                                </td>
                                <td>
                                    $ @Html.DisplayFor(modelItem => item.Price)
                                </td>
                                <td>
                                    <a asp-controller="Products" asp-action="EditProduct" asp-route-id="@item.ProductId"><i class="fa fa-pencil" aria-hidden="true"></i> Edit</a> <br />
                                    <a asp-controller="Products" asp-action="RemoveProduct" asp-route-id="@item.ProductId"><i class="fa fa-trash" aria-hidden="true"></i> Delete</a> <br />
                                    <a asp-controller="Products" asp-action="AddProductImage" asp-route-id="@item.ProductId"><i class="fa fa-picture-o" aria-hidden="true"></i> Add Images</a> <br />
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>

<br />

@*Pagination*@
<div class="row">
    <div class="col-5"></div>
    <div class="col-1">
        @Html.PagedListPager((IPagedList)Model, page => Url.Action("AllProducts", new { page = page }),
        new X.PagedList.Mvc.Core.Common.PagedListRenderOptions
            {
                DisplayItemSliceAndTotal = false,
                ContainerDivClasses = new[] { "navigation" },
                LiElementClasses = new[] { "page-item" },
                PageClasses = new[] { "page-link" },
            })
    </div>
    <div class="col-6"></div>
</div>
@*Pagination*@